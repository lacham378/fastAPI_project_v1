name: Build and Deploy Code

on: [push, pull_request]

jobs:
  build:
    environment:
      test_lab
      
    env:
      DB_HOSTNAME: ${{secrets.DB_HOSTNAME}}
      DB_PORT: ${{secrets.DB_PORT}}
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      DB_NAME: ${{secrets.DB_NAME}}
      DB_USERNAME: ${{secrets.DB_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
 
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DB_PASSWORD}}
          POSTGRES_DB: ${{secrets.DB_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: setup Python  3.x
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Update pip to latest version
        run: python -m pip install --upgrade pip
      - name: Installing all dependencies
        run: pip install -r requirements.txt
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Test with Pytest
        run: |
          pip install pytest
          pytest -v
     
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{secrets.DOCKER_HUB_USERNAME}}
      #     password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

      # - name: Setup Docker Buildx
      #   id: docker buildx create
      #   uses: docker/setup-buildx-action@v1
      #   # uses: docker buildx create --name api --driver docker-container --bootstrap --use

      # - name: Build and push
      #   id: buildx
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     builder: ${{steps.buildx.outputs.name}}
      #     push: true
      #     tags: ${{secrets.DOCKER_HUB_USERNAME}}/api:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      # - name: Image digest
      #   run: echo ${{steps.docker_build.outputs.digest}}
  deploy:
    runs-on:  ubuntu-latest
    needs:  [build]
    environment:
      name: prod_env
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Deploying ubuntu-server
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.PROD_HOST}}
          username: ${{secrets.PROD_USERNAME}}
          password: ${{secrets.PROD_PASSWORD}}
          port: ${{secrets.PROD_PORT}}
          script: |
            cd app/src
            git pull
            whoami
            
            



      
      
